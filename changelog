I should have started this a long time ago. But I guess now's as good
a time as any.

This changelog will be where I document any changes I make to any part
of this entire directory. Source files, macros, even scripts and
simulation file processing changes. So without further ado...



September 7 2018

Currently there's great debate about whether or not the muon energy
sampling method is correct. The position distribution is negligibly
altered from the original muon source file, and the angular
distributions have been extensively analyzed and found to be in good
agreement with expectation. However, until the energy issue is
resolved, no further simulations will be created or processed.

One major change to note at this time is a fundamental altering of the
world geometry. The information about the original world geometry and
the world geometry used after that will be kept in
Detector_CJStyle.icc under the options "OriginalWithRock" and
"OriginalWithRangeCuts" options, respectively. The "OriginalNoRock"
option will also be available, and is identical to OriginalWithRock
but with the rock all removed.

The new option will be "September2018WithCuts" and will feature the
following changes:

- The detector assembly will no longer be centered in the
  world. Instead, it will be shifted down 6.5 m.

  ("the detector assembly" refers to the watershield, the fill gas,
  the liquid argon, the copper cryostats and the germanium detectors
  themselves.)

- There was 23.5 m of rock located below the detector assembly. This
  will be reduced to 5 m.

- There was 15.5 m of rock located above the top of the lab
  space. This will be reduced to 10m.

- The world's size on the z axis will be reduced from 60 m to
  (60-(15.5-10)-(23.5-5)) = (60-5.5-18.5) = 36 m. The x and y axes
  will remain at 100m each.

- The lab cutout currently extends outside of the world. This has not
  thrown any errors because it is a subtraction solid. However, if we
  ever want to make the lab "real" and filled with something like air,
  it must fit inside the world boundaries. For this reason, its length
  on the x axis will be reduced from 70m to 60m, and it will be
  shifted 20m to the left of center, rather than 25 m. So its x bounds
  will be -50<x<10, rather than -60<x<10.


So much for geometric changes. The sampling method will also
experience significant changes. The sampling plane was 5 m above the
detector assembly. This meant part of it was actually in the lab
volume, and some muons didn't even cross through any rock before
hitting the top of the detector assembly (which is at the lab
floor). To give all muons a chance to shower properly, the sampling
plane is being shifted up 13m, and will sit 18m above the
assembly. This ensures that in the minimum case (muon travelling
straight downward, directly above the assembly) 10 m of rock will be
crossed (lab height = 8 m). To compensate for the increased vertical
distance, a larger plane must be made to simulate muons with large
horizontal momenta in such a way that they will hit the top of the
assembly isotropically. This increases the size of the sampling plane
to 99m in both x and y directions. To ensure isotropic behavior on the
sides of the assembly, the sampling plane would need to be 171m in
both x and y, which is currently considered unacceptably large. This
may change in the future, though, and would require a larger world.

Another change to the sampling method is that a geometric
calculation will be performed when a new muon is sampled. If a
straight line (along the muon's momentum) does not pass within 5m of
the detector assembly, that muon will be immediately killed before it
can propagate. This is to save on the enormous amounts of time muons
take to travel through the rock. This calculation will look very
complicated, but is in fact based on elementary trigonometry. It will,
of course, be thoroughly validated in a script before implementation.

As a final change to the sampling method, the position sampling of the
muons is being moved to ShowerGenerator.cc (where it should have been
all along, to be honest). It's going to be randomized and flatly
sampled on both the x and y axes. This will cause a difference from
the original muon's position information. The justification for this
is that the mountain profile is changing very slowly, so a small
change in location within the lab space will cause a negligible change
in the muon's other information.

Tentatively, it's likely that muon sampling will use a different input
file than it did previously. This is not being implemented until after
the energy validation, though, so stay tuned.


1/21/2019
G4Polycone seems to be completely broken after the move to Lawrence (minor alterations made to the code to make it compatible with GEANT4 10.02 btw). I've had to change the geometry so that rather than the inner/outer cryostats, liquid argon, and water shield being made out of a single polycone each, they're now each made out of 2 disks and a hollow cylinder. What a pain in the ass.


02/02/2019
I've added geometry options and modified the main file for the neutron multiplicity study. I should probably use two different main files for this... Look for an update soon saying that I've separated the two. The macro for the neutron study is neutronMultiplicitySource.mac


02/05/2019
Switched the module from neutron mode to muon mode, or whatever the heck you want to call it. Also, there were some mondo problems with the neutron study. The cause was the .000001 cm air gap I was leaving between each slab of rock. I forgot all about it when I told the module to kill any particles that changed boundaries into something that wasn't rock. I left the gap in the interest of preventing any weird boundary overlap issues, but it cause more problems for me than the boundary overlap ever would! What a world.

Anyway, switched over to muon mode, ran a test sim, made sure the geometric cut was working properly (AGAIN). Fixed hitbuilder, eventbuilder, jobsubmit, manysubmit to be compatible with Lawrence. Fixed traceback and trace2 (I hope).


03/03/2019
Neutron study went well. Implemented a custom tracking action. This tracking action effectively 'tags' nuclei created in the simulation as well as all their daughters/secondaries. When one of these particles shows up in the germanium, the information in the tag can be used to find information about the original nucleus, regardless of where it originated. Right now the only parameter stored and retrieved in this fashion is called 'nuclearPID', but I expect to add more very soon.


03/11/2019
Modified the new tracking action class to store vectors rather than single objects. Previously, I could only record the information about the original nucleus and the final particle which entered the germanium. This way, if for example, the nucleus creates secondaries, which create their OWN secondaries, the information about all three particles can be stored. This is definitely a work in progress and is not in its final build.

Also, switched back to neutron mode to run some modified neutron simulations.


03/21/2019
Undid the modifications from the previous entry in this log. Vectors have proven to be too much trouble, especially with the finaltrace.C script.

Officially began production again with the following setup:
	Geometry: September2018WithCuts (see Detector_CJStyle.icc) Muons:
	Position and direction sampled from Ralph's 2017 file, energy flat
	between 0 and 20 TeV 100 muons per file, 100 files per production
	folder Fillgas (gas right next to detectors): Liquid argon
	250,000 muons simulated.


04/21/2019

Several production runs have been produced. Below is a list of their start dates, their properties, and the number of muons simulated so far in each one.

	03/29/2019: Same as 03/21/2019, but with a flat energy spectrum from 20-200 TeV, rather than 0-20 TeV. 90,000 muons simulated.

	04/05/2019: Same as before, with flat spectrum 0-200 TeV, and fillgas as gaseous nitrogen. 100,000 muons simulated.

	04/13/2019: Same as before, with flat spectrum 0-20 TeV. 50,000 muons simulated.
	Also, at this time implemented second file. See below.

	04/17/2019: Identical to 03/21/2019 setup, but with the second file from 04/13/2019. 500,000 muons simulated.

The second file referenced above is a new output file created at the time of simulation.
It contains information saved from the TRACK level, whenever a new nucleus is produced, ANYWHERE in the simulation geometry.
Contrast this to the first output file, which saves step level information, but only for steps inside the Ge detectors.

On a minor note, removed the radioactive impurities which were included in the rock of the simulation. Not sure why they were there to begin with...

Finally, a new directory has been added to /all/, called collections/, and is used to combine results from identical runs like 03/21/2019 and 04/17/2019.


05/06/2019

Updated scripts to look nice and work better with collections/

Added a new branch to the first output file, called "weight", which attempts to retroactively add an energy distribution to files which were sampled from a flat energy distribution (which is all of them recently). It uses the energy distribution function proposed in the 2005 paper by Mei and Hime,
	https://arxiv.org/abs/astro-ph/0512125
This branch needs to be carried over in the hitbuilder and eventbuilder as well. Currently, this is done outside of regular production, but there are plans to incorporate it into the regular production scripts. There are modified versions of the plotting scripts which use "weight" to weight the energy spectra.

Renamed the simulation module from "Muon_GUORE" to "CoBaLEP", and updated the licensing info accordingly, all with Ralph's blessing.


06/05/2019

Started work on a new script, neutroncounting.C, to get the neutron energy spectrum from existing data.
There are two plots of interest: the neutron kinetic energy at every step (very much double counted) and the neutron energy at capture. The first plot is incredibly easy to obtain. The problem with the second plot is that I don't know how to distinguish captured neutrons from neutrons which simply left the detector volume and stopped having their information recorded. So for now, the second plot is just going to contain information about both. Save for the well-known "double counting inelastically scattered neutrons" issue, the second plot should not be double counted. I have no idea how large the effect of the inelastic thingy is though.


06/15/2019

Completed first trig study. It was a doozy! The files associated with it can be found in scripts/trigjunk

Basically the way I did it is with the following changes:
	In Detector_CJStyle.cc, added a "TrigStudy" geometry which is basically just a cylinder the size of the target volume.
	In ShowerGenerator.cc, completely overhauled the trig cut to be more understandable.
	In CoBaLEP.cc, turned off all custom user actions except one (more on this later).

What I did then was has ShowerGenerator.cc report a '1' if it thought its current muon would make it to the target volume, and a '2' otherwise.
At the same time, I let the particle (geantinos not muons to save time) simulate fully, and made CoBaLEP report in its steppingaction whether or not anything entered the target volume by outputting a '3'.
This way, every time ShowerGenerator.cc output a '1', it should be followed by a '3', and every '2' should NOT be followed by a 3.
Finally, I wrote a simple script to do the above automatically so I could simulate high statistics.

As it turned out, my trig cut was 5-10% wrong. Fixing it was a bitch and a half. I didn't give up until 20,000 particles in a row reported only 1's followed by 3's.

Once I was certain the trig cut was at least 99.99% accurate, I stopped simulating particles which failed the cut so I could count how many attempts it took to sample a successful particle. I ran 100,000 particles for high statistics, and it took about 10 hours on a single operating node. The result for this geometery (September2018WithCuts) and this sampling plane size (99m*99m square) was an efficiency of 1/11.99. Now that the scripts are all written, it should be a matter of manpower to do an identical study for any new geometries or efficiencies implemented.


06/17/2019

Exported all geometries in src/Detector_CJStyle.cc to GDML files. Now, instead of building the geometry in GEANT4 every time I run a simulation, I can just import the geometry file I want. This has the advantage of making version control safer and easier, as well as a slight boost to runtime, but most importantly it makes any geometries I create portable and therefore shareable.

To import a different geometry, just change the input filename in src/DetectorConstruction.cc like we used to change the RockOption string.
To create a new geometry file, just uncomment the GDML lines in the main() function of CoBaLEP.cc and change the output filename to whatever you want.


07/10/2019

Performed a study of path length for muons which enter the LAr tank. In the current geometry the tank is 8m in height, 8m in diameter, and cylindrical. Surprisingly, the average path length was significantly lower than 8, ringing in at 5.18 m.

Running a new batch of 500,000 muons, same "standard" setup but energies from 0-2 TeV, flat. After re-investigating the problems with Ralph's sufrace-to-lab simulations, it's again apparent these can't be used for any meaningful discussions of physics results. Ralph is working on new surface-to-lab simulations at this time.

Changed meihimweighting.C to make it a part of standard production. Just one more command to call when processing...

09/19/2019

Since previous update, have done another LAr study (of neutron showering), increased statistics in the 0-2 TeV setup described in the previous update, realized GDML geometries don't allow for range cuts, made new geometries (for the LAr neutron study, for a small LAr volume study, and for a "new" geometry based on the pCDR). Updated some branch names for clarity, added a "startenergy" branch for nuclear information. Ran statistics in the small LAr volume study.
